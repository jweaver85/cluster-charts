apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-db-create"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Name | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Values.image.tag | quote }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-db-create"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: create-db
          image: postgres:15
          command:
            - bash
            - -ec
            - |
              HOST='postgres.default.svc.cluster.local'
              PORT='5432'
              PGPASSWORD="$POSTGRES_ADMIN_PASSWORD" psql -h "$HOST" -U "$POSTGRES_ADMIN_USERNAME" -d postgres -c "CREATE USER $POSTGRES_USER WITH ENCRYPTED PASSWORD '$POSTGRES_PASSWORD'" || true
              PGPASSWORD="$POSTGRES_ADMIN_PASSWORD" psql -h "$HOST" -U "$POSTGRES_ADMIN_USERNAME" -d postgres -c "ALTER USER $POSTGRES_USER WITH ENCRYPTED PASSWORD '$POSTGRES_PASSWORD'" || true
              PGPASSWORD="$POSTGRES_ADMIN_PASSWORD" psql -h "$HOST" -U "$POSTGRES_ADMIN_USERNAME" -d postgres -c "CREATE DATABASE $POSTGRES_DB;" || true
              PGPASSWORD="$POSTGRES_ADMIN_PASSWORD" psql -h "$HOST" -U "$POSTGRES_ADMIN_USERNAME" -d postgres -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRES_DB TO $POSTGRES_USER"
              PGPASSWORD="$POSTGRES_ADMIN_PASSWORD" psql -h "$HOST" -U "$POSTGRES_ADMIN_USERNAME" -d $POSTGRES_DB -c "GRANT ALL ON SCHEMA public TO $POSTGRES_USER"
          env:
            - name: POSTGRES_DB
              value: {{ .Release.Name | replace "-" "_" }}
          envFrom:
            - configMapRef:
                name: keycloak
            - secretRef:
                name: {{ .Release.Name }}-secret
            - secretRef:
                name: postgres-secret